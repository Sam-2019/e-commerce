type UserDetail implements User {
  id: ID
  username: String
  firstName: String
  lastName: String
  email: EmailAddress
  photoURL: String
  phoneNumber: Int
  verified: Boolean
  cart: [CartItem]
  order: [OrderItem]
  wishlist: [WishListItem]
  review: [ReviewItem]
}

type SignupPayload {
  error: ErrorType
  user: UserDetail
}

type ProductDetail implements Product {
  id: ID
  name: String
  slug: String
  price: Float
  imageURL: String
  description: Markdown
  quantity: Int
  author: String
  rating: Float
  review: [ReviewItem]
}

type AddProductPayload {
  error: ErrorType
  product: ProductDetail
}

type Cart {
  id: ID
  userID: ID
  productID: ID
  quantity: Int
}

type CartItem {
  id: ID
  quantity: Int
  product: Product
}

type AddCartPayload {
  error: ErrorType
  cart: Cart
}

type WishList {
  id: ID
  userID: ID
  productID: ID
}

type WishListItem implements Product {
  id: ID
  name: String
  slug: String
  price: Float
  imageURL: String
  description: Markdown
}

type AddWishListPayload {
  error: ErrorType
  wishlist: WishList
}

type Order {
  id: ID
  userID: ID
  productID: [ID]
  paymentID: ID
  deliveryID: ID
  orderNumber: Int
  orderValue: Float
  status: Status
}

type OrderItem implements Product {
  id: ID
  name: String
  slug: String
  price: Float
  imageURL: String
  quantity: Int
  status: Status
  description: Markdown
}

type AddOrderPayload {
  error: ErrorType
  order: Order
}

  type Review {
    id: ID
    userID: ID
    review: Markdown
    rating: Float
    created_at: String
  }

type ReviewItem {
    id: ID
    user: User
    productID: ID
    review: Markdown
    rating: Float
    created_at: String
}

  type AddReviewPayload {
    error: ErrorType
    review: Review
    }

type AuthenticationData {
  userID: ID
  token: String
  tokenExpiration: Int
}

type LoginPayload {
  error: ErrorType
  user: AuthenticationData
}

type LocationDetail implements Location {
  id: ID
  disabled: Boolean
  name: String
  fee: Float
}

type AddLocationPayload {
  location: LocationDetail
  error: ErrorType
}

type PaymentDetail implements Payment {
  id: ID
  method: PaymentMethod
  status: Status
  phoneNumber: Int
}

type AddPaymentPayload {
  error: ErrorType
  payment: PaymentDetail
}

type Cash {
  amount: Float
}

type MobileMoney {
  momoName: String
  momoNumber: Int
  momoTransactionID: String
}

type DeliveryDetail implements Delivery {
  id: ID
  locationID: ID
  address: DigitalAddress
  landmark: String
}

type AddDeliveryPayload {
  error: ErrorType
  delivery: DeliveryDetail
}

type Pagination {
  count: Int
  products: [ProductDetail]
}

type ErrorType {
  message: String
}
